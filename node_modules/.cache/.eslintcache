[{"C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\index.js":"1","C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\App.js":"2","C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\Redux\\Reducers\\ScoreReducer.js":"3","C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\Containers\\GameWindow.js":"4","C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\Component\\Home\\Home.js":"5","C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\Component\\GameOver\\GameOver.js":"6","C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\Component\\SFX.js":"7","C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\Component\\Alien\\Alien.js":"8","C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\Component\\Score\\Score.js":"9","C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\Component\\Ship\\Ship.js":"10","C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\Component\\Bullet\\Bullet.js":"11","C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\Containers\\GameWindowLvl2.js":"12"},{"size":649,"mtime":1647381934449,"results":"13","hashOfConfig":"14"},{"size":970,"mtime":1652711851301,"results":"15","hashOfConfig":"14"},{"size":656,"mtime":1647354210396,"results":"16","hashOfConfig":"14"},{"size":11823,"mtime":1652725443270,"results":"17","hashOfConfig":"14"},{"size":554,"mtime":1647386217007,"results":"18","hashOfConfig":"14"},{"size":1140,"mtime":1652949723781,"results":"19","hashOfConfig":"14"},{"size":1854,"mtime":1652880643353,"results":"20","hashOfConfig":"14"},{"size":2372,"mtime":1652725566215,"results":"21","hashOfConfig":"14"},{"size":287,"mtime":1647012264922,"results":"22","hashOfConfig":"14"},{"size":3069,"mtime":1652707030145,"results":"23","hashOfConfig":"14"},{"size":1013,"mtime":1647292333627,"results":"24","hashOfConfig":"14"},{"size":11734,"mtime":1652725507174,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gq46g2",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\index.js",[],[],"C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\App.js",[],[],"C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\Redux\\Reducers\\ScoreReducer.js",["64"],[],"C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\Containers\\GameWindow.js",["65","66"],[],"import React, {useState,useEffect} from 'react';\r\nimport {Ship} from \"../Component/Ship/Ship\";\r\nimport {Bullet} from \"../Component/Bullet/Bullet\";\r\nimport {SFX} from \"../Component/SFX\";\r\nimport {Alien} from \"../Component/Alien/Alien\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useNavigate, useLocation} from 'react-router-dom'\r\nimport Score from \"../Component/Score/Score\";\r\nimport './GameWindow.css';\r\nimport '../Component/Ship/Ship.css'\r\nimport '../Component/Bullet/Bullet.css'\r\nimport '../Component/Alien/Alien.css'\r\nimport '../Component/Score/Score.css'\r\nimport '../Component/Lives/Lives.css'\r\nimport shipLive from '../Assets/ShipImg/ship.png'\r\n\r\n\r\nconst Audio = new SFX();\r\n\r\n\r\nfunction GameWindow(props) {\r\n\r\n    const location = useLocation()\r\n\r\n    //################################### Audio Initialisation ###################################################\r\n\r\n    const [toggle, setToggle] = useState(true);\r\n\r\n    const navigate = useNavigate();\r\n    const Quitter = () => {\r\n        navigate('/home');\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const play = () => {\r\n        if (toggle) {\r\n            Audio.music.play();\r\n            Audio.music.loop = true;\r\n        }else {\r\n            Audio.music.pause()\r\n        }\r\n        setToggle(!toggle);\r\n    }\r\n\r\n\r\n    //################################### Redux Initialisation ###################################################\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const incrFunction = () => {\r\n        dispatch({\r\n            type: \"INCR\"  //nom de l'action\r\n        })\r\n    }\r\n    const decrFunction = () => {\r\n        dispatch({\r\n            type: \"DECR\"  //nom de l'action\r\n        })\r\n    }\r\n    const nav = useNavigate();\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n\r\n\r\n        //###################################  const and fonctions Initialisation ###################################################\r\n\r\n        const gameOver = () => {\r\n            clearInterval(interval);\r\n            clearInterval(fireInterval);\r\n            aliens.forEach(alien => {\r\n                alien.remove()\r\n            })\r\n            nav('/gameover');\r\n        }\r\n\r\n        const lvl = 1\r\n\r\n\r\n        const bullets = [];\r\n        const creatBullet = ({x,y,nomDeClassCSS, isAlien = false}) => { //fonction pour crée des tires\r\n            bullets.push(new Bullet ({\r\n                x,\r\n                y,\r\n                nomDeClassCSS,\r\n                isAlien\r\n            }));\r\n        }\r\n\r\n\r\n\r\n        const shipHits = () => {   // si le vaissaux est touché\r\n            let life = document.querySelectorAll(\".ship-lives\")\r\n            if (life.length > 1){\r\n                life[life.length-1].remove()\r\n            }\r\n            else {\r\n                nav('/gameover');\r\n                clearInterval(fireInterval);\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        const aliens = [];  //création des aliens sous forme de tableau\r\n        // const alienGrid = []; //TA\r\n        let conteur = 0;\r\n\r\n        const item = document.querySelector(\".game_window\");\r\n        const style = getComputedStyle(item) //renvoie toutes les propriteés CSS\r\n        let min_x =parseInt(style.marginLeft) //avoir le bord gauche\r\n        let max_x = document.body.offsetWidth - min_x - 200 // avoir le bord droite\r\n        let max_y = item.offsetHeight // avoir la hauteur max\r\n        let Alien_Raws = 3; // definition du nombre de ligne d'aliens\r\n        // let Alien_Col = 0;\r\n\r\n\r\n\r\n\r\n\r\n        const removeAlien = (alien) => {    //supprimer un alien\r\n            aliens.splice(aliens.indexOf(alien),1);\r\n            alien.remove();\r\n        };\r\n        const removeBullet = (bullet) => {  //supprimer un tir\r\n            bullets.splice(bullets.indexOf(bullet),1);\r\n            bullet.remove()\r\n            if (bullet.isAlien){   //si le tir touche le vaissaus\r\n                decrFunction();\r\n                shipHits();\r\n            }else {\r\n                incrFunction(); //si le tir touche le vaisseaux\r\n                win();\r\n            }\r\n\r\n        };\r\n\r\n        const isOverlapping = (element1, element2) => {\r\n            //code source :https://stackoverflow.com/questions/12066870/how-to-check-if-an-element-is-overlapping-other-elements\r\n            //pour savoir si deux element du dom se superposent\r\n            const rect1 = element1.el.getBoundingClientRect();\r\n            const rect2 = element2.el.getBoundingClientRect();\r\n\r\n            return !(rect1.right < rect2.left ||\r\n                rect1.left > rect2.right ||\r\n                rect1.bottom < rect2.top ||\r\n                rect1.top > rect2.bottom)\r\n        }\r\n\r\n        const getOverlappingBullet = (entity) => { //fonction qui peremt  de savoir si deux entity se touche\r\n            for (let bullet of bullets) {\r\n                if (isOverlapping(entity, bullet)) {\r\n                    return bullet\r\n                }\r\n            }return null;\r\n        }\r\n\r\n        const getOverlappingAliens = (entity) => { //fonction qui peremt  de savoir si deux entity se touche\r\n            for (let alien of aliens) {\r\n                if (isOverlapping(entity, alien)) {\r\n                    return alien\r\n                }\r\n            }return null;\r\n        }\r\n\r\n\r\n\r\n\r\n        //################################### ship Initialisation ###################################################\r\n\r\n        const ship = new Ship({\r\n            getOverlappingBullet,\r\n            getOverlappingAliens,\r\n            gameOver,\r\n            removeBullet\r\n        });\r\n\r\n        //################################### Aliens Initialisation ###################################################\r\n\r\n        for (let row = 0; row < Alien_Raws  ; row ++) {\r\n            // const alienCol = []; //pour le tir alien (TA)\r\n            for (let col = 0 ; conteur < max_x ; col++) {\r\n                const alien = new Alien({\r\n                    x: min_x + 120 * col ,\r\n                    y: row * 100 + 10,\r\n                    getOverlappingBullet,\r\n                    removeAlien,\r\n                    removeBullet,\r\n                    lvl\r\n                });\r\n\r\n                conteur = min_x + 120 * col ;\r\n                aliens.push(alien);\r\n                // alienCol.push(alien); //TA\r\n\r\n            }\r\n            conteur = 0;\r\n            // alienGrid.push(alienCol);//TA\r\n        }\r\n\r\n\r\n\r\n        const getLeftMostAlien = () => {\r\n            return aliens.reduce((minimumAlien, currantAlien) => {\r\n                return currantAlien.x < minimumAlien.x ? currantAlien : minimumAlien;\r\n            });\r\n        };\r\n        const getRightMostAlien = () => {\r\n            return aliens.reduce((maximumAlien, currantAlien) => {\r\n                return currantAlien.x > maximumAlien.x ? currantAlien : maximumAlien;\r\n            });\r\n        };\r\n\r\n        //################################### ship Control ###################################################\r\n\r\n        const keys = {\r\n            d:false,\r\n            q:false,\r\n            ' ':false\r\n        }\r\n\r\n        window.addEventListener('keydown', e => {\r\n            keys[e.key] = true;\r\n            //console.log(keys)\r\n        })\r\n        window.addEventListener('keyup', e => {\r\n            keys[e.key] = false;\r\n        })\r\n\r\n        const interval = setInterval(() => {\r\n            if (keys['d'] && ship.x < document.querySelector(\".game_window\").offsetWidth - 90 ) {\r\n                ship.moveRight()\r\n\r\n            }\r\n            if (keys['q'] && ship.x >  5) {\r\n                ship.moveLeft()\r\n\r\n            }\r\n            if (keys[' ']) {\r\n                ship.fire({creatBullet}); //on passe une fonction a notre class\r\n            }\r\n\r\n            ship.shipUpdate()\r\n\r\n            bullets.forEach(bullet => {\r\n                bullet.move();\r\n                if (bullet.y < 0 || bullet.y > max_y) {   //quand le tir sort de l'écran\r\n                    bullet.remove();\r\n                    bullets.splice(bullets.indexOf(bullet),1);//supprimer un element du tableau bullets\r\n                }\r\n            });\r\n\r\n\r\n            //################################### Alien Control ###################################################\r\n\r\n            aliens.forEach(alien => {\r\n                alien.update()\r\n            })\r\n\r\n\r\n            const maxLeftAlien = getLeftMostAlien();\r\n\r\n            if (maxLeftAlien.x <  min_x) {\r\n                aliens.forEach(alien => {\r\n                    alien.setDirectionRight()\r\n                })\r\n            }\r\n\r\n            const maxRightAlien = getRightMostAlien();\r\n            if (maxRightAlien.x > document.body.offsetWidth - min_x - 100) {\r\n                aliens.forEach(alien => {\r\n                    alien.setDirectionLeft()\r\n                })\r\n            }\r\n\r\n            aliens.forEach(alien => {\r\n                if ( alien.y > max_y - 67) {   //quand le tir sort de l'écran\r\n                    gameOver()\r\n                }\r\n            });\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }, 20);\r\n\r\n        aliens.forEach(alien => {\r\n            alien.moveDown()\r\n        })\r\n\r\n        const fireInterval = setInterval (() => { //alien qui tire randome\r\n           let alien = aliens[Math.floor(Math.random()*aliens.length)]; //pour choisir un alien random\r\n           alien.fireAlien({creatBullet});\r\n        }, 2000)\r\n\r\n        // //###################################### Alien fire Random #############################################\r\n        //\r\n        // Alien_Col = alienGrid[0].length;\r\n        // //on parcours toutes les lignes de toutes les colonnes pour determiner le plus bas\r\n        // const getBottomAliens = () => {\r\n        //     const bottomAliens = [];\r\n        //     for (let col = 0 ; col < Alien_Col ; col++){\r\n        //         for (let row = Alien_Raws - 1 ; row >= 0 ; row--){\r\n        //             if (alienGrid[row][col]) {\r\n        //                 bottomAliens.push(alienGrid[row][col]);\r\n        //                 break;\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     return bottomAliens;\r\n        // };\r\n        //\r\n        // const getRandomAlien = (alienList) => {\r\n        //     return alienList[\r\n        //         parseInt(Math.random()*alienList.length) //avoir un chiffre random depuis un array\r\n        //         ];\r\n        // };\r\n        //\r\n        // const aliensFireBullet = () => {\r\n        //     const bottomAliens = getBottomAliens();\r\n        //     const randomAlien = getRandomAlien(bottomAliens);\r\n        //     //fire depuis un Alien random\r\n        //     creatBullet({\r\n        //         x: randomAlien.x,\r\n        //         y: randomAlien.y,\r\n        //         nomDeClassCSS: 'bullet-Alien',\r\n        //         isAlien: true\r\n        //     });\r\n        //\r\n        // };\r\n        //\r\n        // const intervalForAlienShot = setInterval (()=>{\r\n        //     aliensFireBullet();\r\n        // }, 3000);\r\n\r\n        const win = () => {\r\n            if (aliens.length === 0) {\r\n                nav('/gameover');\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n            clearInterval(fireInterval);\r\n            // clearInterval(intervalForAlienShot);\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <button className='buttonGame' onClick={play}>Audio</button>\r\n            <button className='buttonGame' id='Quitter' onClick={Quitter}>Quitter</button>\r\n            <div className='game_window' >\r\n                <Score/>\r\n                <div className=\"Lives\">\r\n                    <h2>Vie: </h2>\r\n                    <img src={shipLive} alt=\"\" className=\"ship-lives\"/>\r\n                    <img src={shipLive} alt=\"\" className=\"ship-lives\"/>\r\n                    <img src={shipLive} alt=\"\" className=\"ship-lives\"/>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default GameWindow;",["67","68"],"C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\Component\\Home\\Home.js",[],[],"C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\Component\\GameOver\\GameOver.js",["69","70"],[],"C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\Component\\SFX.js",[],[],"C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\Component\\Alien\\Alien.js",[],[],"C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\Component\\Score\\Score.js",[],[],"C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\Component\\Ship\\Ship.js",["71"],[],"C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\Component\\Bullet\\Bullet.js",[],[],"C:\\Users\\Achraf\\WebstormProjects\\SpaceInvader\\react_space_invader\\src\\Containers\\GameWindowLvl2.js",["72"],[],{"ruleId":"73","severity":1,"message":"74","line":8,"column":5,"nodeType":"75","messageId":"76","endLine":23,"endColumn":6},{"ruleId":"77","severity":1,"message":"78","line":23,"column":11,"nodeType":"79","messageId":"80","endLine":23,"endColumn":19},{"ruleId":"81","severity":1,"message":"82","line":373,"column":7,"nodeType":"83","endLine":373,"endColumn":9,"suggestions":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"77","severity":1,"message":"89","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":17},{"ruleId":"77","severity":1,"message":"90","line":6,"column":8,"nodeType":"79","messageId":"80","endLine":6,"endColumn":15},{"ruleId":"77","severity":1,"message":"91","line":3,"column":9,"nodeType":"79","messageId":"80","endLine":3,"endColumn":20},{"ruleId":"81","severity":1,"message":"82","line":370,"column":7,"nodeType":"83","endLine":370,"endColumn":9,"suggestions":"92"},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'location' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'decrFunction', 'incrFunction', and 'nav'. Either include them or remove the dependency array.","ArrayExpression",["93"],"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"'ReplayImg' is defined but never used.","'HomeImg' is defined but never used.","'useNavigate' is defined but never used.",["96"],{"desc":"97","fix":"98"},"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"99"},"Update the dependencies array to be: [decrFunction, incrFunction, nav]",{"range":"100","text":"101"},{"range":"102","text":"101"},[11152,11154],"[decrFunction, incrFunction, nav]",[11059,11061]]