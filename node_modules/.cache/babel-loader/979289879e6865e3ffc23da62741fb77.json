{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Achraf\\\\Desktop\\\\SpaceInvader\\\\react_space_invader\\\\src\\\\Containers\\\\GameWindow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Ship } from \"../Component/Ship/Ship\";\nimport { Bullet } from \"../Component/Bullet/Bullet\";\nimport { SFX } from \"../Component/SFX\";\nimport { Alien } from \"../Component/Alien/Alien\";\nimport './GameWindow.css';\nimport '../Component/Ship/Ship.css';\nimport '../Component/Bullet/Bullet.css';\nimport '../Component/Alien/Alien.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Audio = new SFX();\n\nfunction GameWindow(props) {\n  _s();\n\n  const [toggle, setToggle] = useState(true);\n\n  const play = () => {\n    if (toggle) {\n      Audio.music.play();\n      Audio.music.loop = true;\n    } else {\n      Audio.music.pause();\n    }\n\n    setToggle(!toggle);\n  };\n\n  useEffect(() => {\n    //################################### ship Control ###################################################\n    const ship = new Ship();\n    const bullets = [];\n\n    const creatBullet = _ref => {\n      let {\n        x,\n        y\n      } = _ref;\n      bullets.push(new Bullet({\n        x,\n        y\n      }));\n    };\n\n    const keys = {\n      d: false,\n      q: false,\n      ' ': false\n    };\n    window.addEventListener('keydown', e => {\n      keys[e.key] = true; //console.log(keys)\n    });\n    window.addEventListener('keyup', e => {\n      keys[e.key] = false;\n    });\n    const interval = setInterval(() => {\n      if (keys['d'] && ship.x < document.querySelector(\".game_window\").offsetWidth - 90) {\n        ship.moveRight();\n      }\n\n      if (keys['q'] && ship.x > 5) {\n        ship.moveLeft();\n      }\n\n      if (keys[' ']) {\n        ship.fire({\n          creatBullet\n        }); //on passe une fonction a notre class\n      }\n\n      bullets.forEach(bullet => {\n        bullet.moveUp();\n\n        if (bullet.y < 0) {\n          //quand le tir sort de l'Ã©cran\n          bullet.remove();\n          bullets.splice(bullets.indexOf(bullet), 1); //supprimer un element du tableau bullets\n        }\n      }); //################################### Aliens Control ###################################################\n\n      const aliens = [];\n      let conteur = 0;\n      const item = document.querySelector(\".game_window\");\n      const style = getComputedStyle(item);\n      let min_x = parseInt(style.marginLeft);\n      let max_x = document.body.offsetWidth - min_x - 200;\n\n      for (let row = 0; row < 3; row++) {\n        for (let col = 0; conteur < max_x; col++) {\n          const alien = new Alien({\n            x: min_x + 120 * col,\n            y: row * 100 + 10\n          });\n          conteur = min_x + 120 * col;\n          aliens.push(alien);\n        }\n\n        conteur = 0;\n      } // const getLeftMostAlien = () => {\n      //     return aliens.reduce((minimumAlien, currantAlien) => {\n      //        return currantAlien.x < minimumAlien.x ? currantAlien : minimumAlien;\n      //     });\n      // };\n      // const getRightMostAlien = () => {\n      //     return aliens.reduce((maximumAlien, currantAlien) => {\n      //         return currantAlien.x > maximumAlien.x ? currantAlien : maximumAlien;\n      //     });\n      // };\n\n\n      aliens.forEach(alien => {\n        alien.update();\n      }); // const maxLeftAlien = getLeftMostAlien();\n      //\n      // if (maxLeftAlien.x < min_x + 30) {\n      //     aliens.forEach(alien => {\n      //         alien.setDirectionRight()\n      //     })\n      // }\n      // const maxRightAlien = getRightMostAlien();\n      // if (maxRightAlien.x > max_x - 30) {\n      //     aliens.forEach(alien => {\n      //         alien.setDirectionLeft()\n      //     })\n      // }\n    }, 20);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: play,\n      children: \"Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game_window\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(GameWindow, \"yaUXxZlUdU3ffWlPIOj2gYRGw5w=\");\n\n_c = GameWindow;\nexport default GameWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameWindow\");","map":{"version":3,"sources":["C:/Users/Achraf/Desktop/SpaceInvader/react_space_invader/src/Containers/GameWindow.js"],"names":["React","useState","useEffect","Ship","Bullet","SFX","Alien","Audio","GameWindow","props","toggle","setToggle","play","music","loop","pause","ship","bullets","creatBullet","x","y","push","keys","d","q","window","addEventListener","e","key","interval","setInterval","document","querySelector","offsetWidth","moveRight","moveLeft","fire","forEach","bullet","moveUp","remove","splice","indexOf","aliens","conteur","item","style","getComputedStyle","min_x","parseInt","marginLeft","max_x","body","row","col","alien","update","clearInterval"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport {Ship} from \"../Component/Ship/Ship\";\r\nimport {Bullet} from \"../Component/Bullet/Bullet\";\r\nimport {SFX} from \"../Component/SFX\";\r\nimport {Alien} from \"../Component/Alien/Alien\";\r\nimport './GameWindow.css';\r\nimport '../Component/Ship/Ship.css'\r\nimport '../Component/Bullet/Bullet.css'\r\nimport '../Component/Alien/Alien.css'\r\nconst Audio = new SFX();\r\n\r\n\r\nfunction GameWindow(props) {\r\n\r\n    const [toggle, setToggle] = useState(true);\r\n\r\n\r\n    const play = () => {\r\n        if (toggle) {\r\n            Audio.music.play();\r\n            Audio.music.loop = true;\r\n        }else {\r\n            Audio.music.pause()\r\n        }\r\n        setToggle(!toggle);\r\n    }\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n\r\n        //################################### ship Control ###################################################\r\n\r\n        const ship = new Ship();\r\n\r\n        const bullets = [];\r\n        const creatBullet = ({x,y}) => {\r\n            bullets.push(new Bullet ({\r\n                x,\r\n                y\r\n            }));\r\n        }\r\n        const keys = {\r\n            d:false,\r\n            q:false,\r\n            ' ':false\r\n        }\r\n\r\n        window.addEventListener('keydown', e => {\r\n            keys[e.key] = true;\r\n            //console.log(keys)\r\n        })\r\n        window.addEventListener('keyup', e => {\r\n            keys[e.key] = false;\r\n        })\r\n\r\n        const interval = setInterval(() => {\r\n            if (keys['d'] && ship.x < document.querySelector(\".game_window\").offsetWidth - 90 ) {\r\n                ship.moveRight()\r\n\r\n            }\r\n            if (keys['q'] && ship.x >  5) {\r\n                ship.moveLeft()\r\n\r\n            }\r\n            if (keys[' ']) {\r\n                ship.fire({creatBullet}); //on passe une fonction a notre class\r\n            }\r\n\r\n            bullets.forEach(bullet => {\r\n                bullet.moveUp();\r\n                if (bullet.y < 0) {   //quand le tir sort de l'Ã©cran\r\n                    bullet.remove();\r\n                    bullets.splice(bullets.indexOf(bullet),1);//supprimer un element du tableau bullets\r\n                }\r\n            });\r\n\r\n            //################################### Aliens Control ###################################################\r\n\r\n\r\n            const aliens = [];\r\n            let conteur = 0;\r\n\r\n            const item = document.querySelector(\".game_window\");\r\n            const style = getComputedStyle(item)\r\n            let min_x =parseInt(style.marginLeft)\r\n            let max_x = document.body.offsetWidth - min_x - 200\r\n\r\n\r\n\r\n            for (let row = 0; row < 3  ; row ++) {\r\n                for (let col = 0 ; conteur < max_x ; col++) {\r\n                    const alien = new Alien({\r\n                        x: min_x + 120 * col ,\r\n                        y: row * 100 + 10,\r\n                    });\r\n                    conteur = min_x + 120 * col ;\r\n                    aliens.push(alien);\r\n                }\r\n                conteur = 0;\r\n            }\r\n\r\n            // const getLeftMostAlien = () => {\r\n            //     return aliens.reduce((minimumAlien, currantAlien) => {\r\n            //        return currantAlien.x < minimumAlien.x ? currantAlien : minimumAlien;\r\n            //     });\r\n            // };\r\n            // const getRightMostAlien = () => {\r\n            //     return aliens.reduce((maximumAlien, currantAlien) => {\r\n            //         return currantAlien.x > maximumAlien.x ? currantAlien : maximumAlien;\r\n            //     });\r\n            // };\r\n\r\n\r\n            aliens.forEach(alien => {\r\n                alien.update()\r\n            })\r\n\r\n            // const maxLeftAlien = getLeftMostAlien();\r\n            //\r\n            // if (maxLeftAlien.x < min_x + 30) {\r\n            //     aliens.forEach(alien => {\r\n            //         alien.setDirectionRight()\r\n            //     })\r\n            // }\r\n\r\n            // const maxRightAlien = getRightMostAlien();\r\n            // if (maxRightAlien.x > max_x - 30) {\r\n            //     aliens.forEach(alien => {\r\n            //         alien.setDirectionLeft()\r\n            //     })\r\n            // }\r\n\r\n\r\n        }, 20);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return () => clearInterval(interval);\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <button onClick={play}>Audio</button>\r\n            <div className='game_window' >\r\n\r\n            </div>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default GameWindow;"]},"metadata":{},"sourceType":"module"}