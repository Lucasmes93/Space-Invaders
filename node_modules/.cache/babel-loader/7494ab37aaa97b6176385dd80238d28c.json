{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Achraf\\\\WebstormProjects\\\\SpaceInvader\\\\react_space_invader\\\\src\\\\Containers\\\\GameWindow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Ship } from \"../Component/Ship/Ship\";\nimport { Bullet } from \"../Component/Bullet/Bullet\";\nimport { SFX } from \"../Component/SFX\";\nimport { Alien } from \"../Component/Alien/Alien\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from 'react-router-dom';\nimport Score from \"../Component/Score/Score\";\nimport './GameWindow.css';\nimport '../Component/Ship/Ship.css';\nimport '../Component/Bullet/Bullet.css';\nimport '../Component/Alien/Alien.css';\nimport '../Component/Score/Score.css';\nimport '../Component/Lives/Lives.css';\nimport shipLive from '../Assets/ShipImg/ship.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Audio = new SFX();\n\nfunction GameWindow(props) {\n  _s();\n\n  //################################### Audio Initialisation ###################################################\n  const [toggle, setToggle] = useState(true);\n  const dispatch = useDispatch();\n\n  const play = () => {\n    if (toggle) {\n      Audio.music.play();\n      Audio.music.loop = true;\n    } else {\n      Audio.music.pause();\n    }\n\n    setToggle(!toggle);\n  };\n\n  const incrFunction = () => {\n    dispatch({\n      type: \"INCR\" //nom de l'action\n\n    });\n  };\n\n  const decrFunction = () => {\n    dispatch({\n      type: \"DECR\" //nom de l'action\n\n    });\n  };\n\n  const nav = useNavigate();\n  useEffect(() => {\n    //###################################  const and fonctions Initialisation ###################################################\n    const bullets = [];\n\n    const creatBullet = _ref => {\n      let {\n        x,\n        y,\n        nomDeClassCSS,\n        isAlien = false\n      } = _ref;\n      bullets.push(new Bullet({\n        x,\n        y,\n        nomDeClassCSS,\n        isAlien\n      }));\n    };\n\n    const shipHits = () => {\n      let life = document.querySelectorAll(\".ship-lives\");\n\n      if (life.length > 1) {\n        life[life.length - 1].remove();\n      } else {\n        nav('/gameover');\n        clearInterval(fireInterval);\n      }\n    };\n\n    const aliens = []; // const alienGrid = []; //TA\n\n    let conteur = 0;\n    const item = document.querySelector(\".game_window\");\n    const style = getComputedStyle(item);\n    let min_x = parseInt(style.marginLeft);\n    let max_x = document.body.offsetWidth - min_x - 200;\n    let max_y = item.offsetHeight;\n    let Alien_Raws = 3; // let Alien_Col = 0;\n\n    const removeAlien = alien => {\n      aliens.splice(aliens.indexOf(alien), 1);\n      alien.remove();\n    };\n\n    const removeBullet = bullet => {\n      bullets.splice(bullets.indexOf(bullet), 1);\n      bullet.remove();\n\n      if (bullet.isAlien) {\n        decrFunction();\n        shipHits();\n      } else {\n        incrFunction();\n        win();\n      }\n    };\n\n    const isOverlapping = (element1, element2) => {\n      //code source :https://stackoverflow.com/questions/12066870/how-to-check-if-an-element-is-overlapping-other-elements\n      //pour savoir si deux element du dom se superposent\n      const rect1 = element1.el.getBoundingClientRect();\n      const rect2 = element2.el.getBoundingClientRect();\n      return !(rect1.right < rect2.left || rect1.left > rect2.right || rect1.bottom < rect2.top || rect1.top > rect2.bottom);\n    };\n\n    const getOverlappingBullet = entity => {\n      for (let bullet of bullets) {\n        if (isOverlapping(entity, bullet)) {\n          return bullet;\n        }\n      }\n\n      return null;\n    }; //################################### ship Initialisation ###################################################\n\n\n    const ship = new Ship({\n      getOverlappingBullet,\n      removeBullet\n    }); //################################### Aliens Initialisation ###################################################\n\n    for (let row = 0; row < Alien_Raws; row++) {\n      // const alienCol = []; //pour le tir alien (TA)\n      for (let col = 0; conteur < max_x; col++) {\n        const alien = new Alien({\n          x: min_x + 120 * col,\n          y: row * 100 + 10,\n          getOverlappingBullet,\n          removeAlien,\n          removeBullet\n        });\n        conteur = min_x + 120 * col;\n        aliens.push(alien); // alienCol.push(alien); //TA\n      }\n\n      conteur = 0; // alienGrid.push(alienCol);//TA\n    }\n\n    const getLeftMostAlien = () => {\n      return aliens.reduce((minimumAlien, currantAlien) => {\n        return currantAlien.x < minimumAlien.x ? currantAlien : minimumAlien;\n      });\n    };\n\n    const getRightMostAlien = () => {\n      return aliens.reduce((maximumAlien, currantAlien) => {\n        return currantAlien.x > maximumAlien.x ? currantAlien : maximumAlien;\n      });\n    }; //################################### ship Control ###################################################\n\n\n    const keys = {\n      d: false,\n      q: false,\n      ' ': false\n    };\n    window.addEventListener('keydown', e => {\n      keys[e.key] = true; //console.log(keys)\n    });\n    window.addEventListener('keyup', e => {\n      keys[e.key] = false;\n    });\n    const interval = setInterval(() => {\n      if (keys['d'] && ship.x < document.querySelector(\".game_window\").offsetWidth - 90) {\n        ship.moveRight();\n      }\n\n      if (keys['q'] && ship.x > 5) {\n        ship.moveLeft();\n      }\n\n      if (keys[' ']) {\n        ship.fire({\n          creatBullet\n        }); //on passe une fonction a notre class\n      }\n\n      ship.shipUpdate();\n      bullets.forEach(bullet => {\n        bullet.move();\n\n        if (bullet.y < 0 || bullet.y > max_y) {\n          //quand le tir sort de l'Ã©cran\n          bullet.remove();\n          bullets.splice(bullets.indexOf(bullet), 1); //supprimer un element du tableau bullets\n        }\n      }); //################################### Alien Control ###################################################\n\n      aliens.forEach(alien => {\n        alien.update();\n      });\n      const maxLeftAlien = getLeftMostAlien();\n\n      if (maxLeftAlien.x < min_x) {\n        aliens.forEach(alien => {\n          alien.setDirectionRight();\n        });\n      }\n\n      const maxRightAlien = getRightMostAlien();\n\n      if (maxRightAlien.x > document.body.offsetWidth - min_x - 100) {\n        aliens.forEach(alien => {\n          alien.setDirectionLeft();\n        });\n      }\n    }, 20);\n    aliens.forEach(alien => {\n      alien.moveDown();\n    });\n    const fireInterval = setInterval(() => {\n      let alien = aliens[Math.floor(Math.random() * aliens.length)];\n      alien.fireAlien({\n        creatBullet\n      });\n    }, 3000); // //###################################### Alien fire Random #############################################\n    //\n    // Alien_Col = alienGrid[0].length;\n    // //on parcours toutes les lignes de toutes les colonnes pour determiner le plus bas\n    // const getBottomAliens = () => {\n    //     const bottomAliens = [];\n    //     for (let col = 0 ; col < Alien_Col ; col++){\n    //         for (let row = Alien_Raws - 1 ; row >= 0 ; row--){\n    //             if (alienGrid[row][col]) {\n    //                 bottomAliens.push(alienGrid[row][col]);\n    //                 break;\n    //             }\n    //         }\n    //     }\n    //     return bottomAliens;\n    // };\n    //\n    // const getRandomAlien = (alienList) => {\n    //     return alienList[\n    //         parseInt(Math.random()*alienList.length) //avoir un chiffre random depuis un array\n    //         ];\n    // };\n    //\n    // const aliensFireBullet = () => {\n    //     const bottomAliens = getBottomAliens();\n    //     const randomAlien = getRandomAlien(bottomAliens);\n    //     //fire depuis un Alien random\n    //     creatBullet({\n    //         x: randomAlien.x,\n    //         y: randomAlien.y,\n    //         nomDeClassCSS: 'bullet-Alien',\n    //         isAlien: true\n    //     });\n    //\n    // };\n    //\n    // const intervalForAlienShot = setInterval (()=>{\n    //     aliensFireBullet();\n    // }, 3000);\n\n    const win = () => {\n      if (aliens.length === 0) {\n        nav('/gameover');\n      }\n    };\n\n    return () => {\n      clearInterval(interval); // clearInterval(intervalForAlienShot);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: play,\n      children: \"Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game_window\",\n      children: [/*#__PURE__*/_jsxDEV(Score, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Lives\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Vie: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: shipLive,\n          alt: \"\",\n          className: \"ship-lives\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: shipLive,\n          alt: \"\",\n          className: \"ship-lives\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: shipLive,\n          alt: \"\",\n          className: \"ship-lives\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(GameWindow, \"ozOv5Wj04zO5kxruA/7cl3Dkb+Y=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = GameWindow;\nexport default GameWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameWindow\");","map":{"version":3,"sources":["C:/Users/Achraf/WebstormProjects/SpaceInvader/react_space_invader/src/Containers/GameWindow.js"],"names":["React","useState","useEffect","Ship","Bullet","SFX","Alien","useDispatch","useNavigate","Score","shipLive","Audio","GameWindow","props","toggle","setToggle","dispatch","play","music","loop","pause","incrFunction","type","decrFunction","nav","bullets","creatBullet","x","y","nomDeClassCSS","isAlien","push","shipHits","life","document","querySelectorAll","length","remove","clearInterval","fireInterval","aliens","conteur","item","querySelector","style","getComputedStyle","min_x","parseInt","marginLeft","max_x","body","offsetWidth","max_y","offsetHeight","Alien_Raws","removeAlien","alien","splice","indexOf","removeBullet","bullet","win","isOverlapping","element1","element2","rect1","el","getBoundingClientRect","rect2","right","left","bottom","top","getOverlappingBullet","entity","ship","row","col","getLeftMostAlien","reduce","minimumAlien","currantAlien","getRightMostAlien","maximumAlien","keys","d","q","window","addEventListener","e","key","interval","setInterval","moveRight","moveLeft","fire","shipUpdate","forEach","move","update","maxLeftAlien","setDirectionRight","maxRightAlien","setDirectionLeft","moveDown","Math","floor","random","fireAlien"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport {Ship} from \"../Component/Ship/Ship\";\r\nimport {Bullet} from \"../Component/Bullet/Bullet\";\r\nimport {SFX} from \"../Component/SFX\";\r\nimport {Alien} from \"../Component/Alien/Alien\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useNavigate} from 'react-router-dom'\r\nimport Score from \"../Component/Score/Score\";\r\nimport './GameWindow.css';\r\nimport '../Component/Ship/Ship.css'\r\nimport '../Component/Bullet/Bullet.css'\r\nimport '../Component/Alien/Alien.css'\r\nimport '../Component/Score/Score.css'\r\nimport '../Component/Lives/Lives.css'\r\nimport shipLive from '../Assets/ShipImg/ship.png'\r\n\r\n\r\nconst Audio = new SFX();\r\n\r\n\r\nfunction GameWindow(props) {\r\n\r\n    //################################### Audio Initialisation ###################################################\r\n\r\n    const [toggle, setToggle] = useState(true);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const play = () => {\r\n        if (toggle) {\r\n            Audio.music.play();\r\n            Audio.music.loop = true;\r\n        }else {\r\n            Audio.music.pause()\r\n        }\r\n        setToggle(!toggle);\r\n    }\r\n\r\n\r\n    const incrFunction = () => {\r\n        dispatch({\r\n            type: \"INCR\"  //nom de l'action\r\n        })\r\n    }\r\n    const decrFunction = () => {\r\n        dispatch({\r\n            type: \"DECR\"  //nom de l'action\r\n        })\r\n    }\r\n    const nav = useNavigate();\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n\r\n\r\n        //###################################  const and fonctions Initialisation ###################################################\r\n\r\n\r\n\r\n\r\n        const bullets = [];\r\n        const creatBullet = ({x,y,nomDeClassCSS, isAlien = false}) => {\r\n            bullets.push(new Bullet ({\r\n                x,\r\n                y,\r\n                nomDeClassCSS,\r\n                isAlien\r\n            }));\r\n        }\r\n\r\n\r\n\r\n        const shipHits = () => {\r\n            let life = document.querySelectorAll(\".ship-lives\")\r\n            if (life.length > 1){\r\n                life[life.length-1].remove()\r\n            }\r\n            else {\r\n                nav('/gameover');\r\n                clearInterval(fireInterval);\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        const aliens = [];\r\n        // const alienGrid = []; //TA\r\n        let conteur = 0;\r\n\r\n        const item = document.querySelector(\".game_window\");\r\n        const style = getComputedStyle(item)\r\n        let min_x =parseInt(style.marginLeft)\r\n        let max_x = document.body.offsetWidth - min_x - 200\r\n        let max_y = item.offsetHeight\r\n        let Alien_Raws = 3;\r\n        // let Alien_Col = 0;\r\n\r\n\r\n\r\n\r\n\r\n        const removeAlien = (alien) => {\r\n            aliens.splice(aliens.indexOf(alien),1);\r\n            alien.remove();\r\n        };\r\n        const removeBullet = (bullet) => {\r\n            bullets.splice(bullets.indexOf(bullet),1);\r\n            bullet.remove();\r\n            if (bullet.isAlien){\r\n                decrFunction();\r\n                shipHits();\r\n            }else {\r\n                incrFunction();\r\n                win();\r\n            }\r\n\r\n        };\r\n\r\n        const isOverlapping = (element1, element2) => {\r\n            //code source :https://stackoverflow.com/questions/12066870/how-to-check-if-an-element-is-overlapping-other-elements\r\n            //pour savoir si deux element du dom se superposent\r\n            const rect1 = element1.el.getBoundingClientRect();\r\n            const rect2 = element2.el.getBoundingClientRect();\r\n\r\n            return !(rect1.right < rect2.left ||\r\n                rect1.left > rect2.right ||\r\n                rect1.bottom < rect2.top ||\r\n                rect1.top > rect2.bottom)\r\n        }\r\n\r\n        const getOverlappingBullet = (entity) => {\r\n            for (let bullet of bullets) {\r\n                if (isOverlapping(entity, bullet)) {\r\n                    return bullet\r\n                }\r\n            }return null;\r\n        }\r\n\r\n\r\n        //################################### ship Initialisation ###################################################\r\n\r\n        const ship = new Ship({\r\n            getOverlappingBullet,\r\n            removeBullet\r\n        });\r\n\r\n        //################################### Aliens Initialisation ###################################################\r\n\r\n        for (let row = 0; row < Alien_Raws  ; row ++) {\r\n            // const alienCol = []; //pour le tir alien (TA)\r\n            for (let col = 0 ; conteur < max_x ; col++) {\r\n                const alien = new Alien({\r\n                    x: min_x + 120 * col ,\r\n                    y: row * 100 + 10,\r\n                    getOverlappingBullet,\r\n                    removeAlien,\r\n                    removeBullet\r\n                });\r\n\r\n                conteur = min_x + 120 * col ;\r\n                aliens.push(alien);\r\n                // alienCol.push(alien); //TA\r\n\r\n            }\r\n            conteur = 0;\r\n            // alienGrid.push(alienCol);//TA\r\n        }\r\n\r\n\r\n\r\n        const getLeftMostAlien = () => {\r\n            return aliens.reduce((minimumAlien, currantAlien) => {\r\n                return currantAlien.x < minimumAlien.x ? currantAlien : minimumAlien;\r\n            });\r\n        };\r\n        const getRightMostAlien = () => {\r\n            return aliens.reduce((maximumAlien, currantAlien) => {\r\n                return currantAlien.x > maximumAlien.x ? currantAlien : maximumAlien;\r\n            });\r\n        };\r\n\r\n        //################################### ship Control ###################################################\r\n\r\n        const keys = {\r\n            d:false,\r\n            q:false,\r\n            ' ':false\r\n        }\r\n\r\n        window.addEventListener('keydown', e => {\r\n            keys[e.key] = true;\r\n            //console.log(keys)\r\n        })\r\n        window.addEventListener('keyup', e => {\r\n            keys[e.key] = false;\r\n        })\r\n\r\n        const interval = setInterval(() => {\r\n            if (keys['d'] && ship.x < document.querySelector(\".game_window\").offsetWidth - 90 ) {\r\n                ship.moveRight()\r\n\r\n            }\r\n            if (keys['q'] && ship.x >  5) {\r\n                ship.moveLeft()\r\n\r\n            }\r\n            if (keys[' ']) {\r\n                ship.fire({creatBullet}); //on passe une fonction a notre class\r\n            }\r\n\r\n            ship.shipUpdate()\r\n\r\n            bullets.forEach(bullet => {\r\n                bullet.move();\r\n                if (bullet.y < 0 || bullet.y > max_y) {   //quand le tir sort de l'Ã©cran\r\n                    bullet.remove();\r\n                    bullets.splice(bullets.indexOf(bullet),1);//supprimer un element du tableau bullets\r\n                }\r\n            });\r\n\r\n\r\n            //################################### Alien Control ###################################################\r\n\r\n            aliens.forEach(alien => {\r\n                alien.update()\r\n            })\r\n\r\n\r\n            const maxLeftAlien = getLeftMostAlien();\r\n\r\n            if (maxLeftAlien.x <  min_x) {\r\n                aliens.forEach(alien => {\r\n                    alien.setDirectionRight()\r\n                })\r\n            }\r\n\r\n            const maxRightAlien = getRightMostAlien();\r\n            if (maxRightAlien.x > document.body.offsetWidth - min_x - 100) {\r\n                aliens.forEach(alien => {\r\n                    alien.setDirectionLeft()\r\n                })\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }, 20);\r\n\r\n        aliens.forEach(alien => {\r\n            alien.moveDown()\r\n        })\r\n\r\n        const fireInterval = setInterval (() => {\r\n           let alien = aliens[Math.floor(Math.random()*aliens.length)];\r\n           alien.fireAlien({creatBullet});\r\n        }, 3000)\r\n\r\n        // //###################################### Alien fire Random #############################################\r\n        //\r\n        // Alien_Col = alienGrid[0].length;\r\n        // //on parcours toutes les lignes de toutes les colonnes pour determiner le plus bas\r\n        // const getBottomAliens = () => {\r\n        //     const bottomAliens = [];\r\n        //     for (let col = 0 ; col < Alien_Col ; col++){\r\n        //         for (let row = Alien_Raws - 1 ; row >= 0 ; row--){\r\n        //             if (alienGrid[row][col]) {\r\n        //                 bottomAliens.push(alienGrid[row][col]);\r\n        //                 break;\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     return bottomAliens;\r\n        // };\r\n        //\r\n        // const getRandomAlien = (alienList) => {\r\n        //     return alienList[\r\n        //         parseInt(Math.random()*alienList.length) //avoir un chiffre random depuis un array\r\n        //         ];\r\n        // };\r\n        //\r\n        // const aliensFireBullet = () => {\r\n        //     const bottomAliens = getBottomAliens();\r\n        //     const randomAlien = getRandomAlien(bottomAliens);\r\n        //     //fire depuis un Alien random\r\n        //     creatBullet({\r\n        //         x: randomAlien.x,\r\n        //         y: randomAlien.y,\r\n        //         nomDeClassCSS: 'bullet-Alien',\r\n        //         isAlien: true\r\n        //     });\r\n        //\r\n        // };\r\n        //\r\n        // const intervalForAlienShot = setInterval (()=>{\r\n        //     aliensFireBullet();\r\n        // }, 3000);\r\n\r\n        const win = () => {\r\n            if (aliens.length === 0) {\r\n                nav('/gameover');\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n            // clearInterval(intervalForAlienShot);\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <button onClick={play}>Audio</button>\r\n            <div className='game_window' >\r\n                <Score/>\r\n                <div className=\"Lives\">\r\n                    <h2>Vie: </h2>\r\n                    <img src={shipLive} alt=\"\" className=\"ship-lives\"/>\r\n                    <img src={shipLive} alt=\"\" className=\"ship-lives\"/>\r\n                    <img src={shipLive} alt=\"\" className=\"ship-lives\"/>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default GameWindow;"]},"metadata":{},"sourceType":"module"}